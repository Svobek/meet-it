// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using meetit.Models;

#nullable disable

namespace meetit.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231130155645_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("meetit.Models.PointValues", b =>
                {
                    b.Property<int>("idPointValues")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPointValues"));

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<DateOnly>("date")
                        .HasColumnType("date");

                    b.Property<float>("idPoint")
                        .HasColumnType("real");

                    b.Property<TimeOnly>("time")
                        .HasColumnType("time");

                    b.HasKey("idPointValues");

                    b.ToTable("PointValues");
                });

            modelBuilder.Entity("meetit.Models.Points", b =>
                {
                    b.Property<int>("PointID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PointID"));

                    b.Property<string>("PointInTrackID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PointName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrackID")
                        .HasColumnType("int");

                    b.Property<float>("xParm")
                        .HasColumnType("real");

                    b.Property<float>("yParm")
                        .HasColumnType("real");

                    b.HasKey("PointID");

                    b.ToTable("Points");
                });

            modelBuilder.Entity("meetit.Models.Track", b =>
                {
                    b.Property<int>("idTrack")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idTrack"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idTrack");

                    b.ToTable("Track");
                });

            modelBuilder.Entity("meetit.Models.Users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("psswd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("meetit.Models.Users_Tracks", b =>
                {
                    b.Property<int>("idUsers")
                        .HasColumnType("int");

                    b.Property<int>("idTracks")
                        .HasColumnType("int");

                    b.Property<int>("isAdmin")
                        .HasColumnType("int");

                    b.HasKey("idUsers", "idTracks");

                    b.ToTable("Users_Tracks");
                });
#pragma warning restore 612, 618
        }
    }
}
